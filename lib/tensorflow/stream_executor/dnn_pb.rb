# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stream_executor/dnn.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("stream_executor/dnn.proto", :syntax => :proto3) do
    add_message "stream_executor.dnn.TensorDescriptorProto" do
      repeated :dimensions, :int64, 1
      optional :data_type, :enum, 2, "stream_executor.dnn.DataType"
      oneof :layout_oneof do
        optional :data_layout, :enum, 3, "stream_executor.dnn.DataLayout"
        optional :filter_layout, :enum, 4, "stream_executor.dnn.FilterLayout"
      end
    end
    add_message "stream_executor.dnn.AlgorithmProto" do
      optional :algo_id, :int64, 1
      optional :math_type, :enum, 2, "stream_executor.dnn.AlgorithmProto.MathType"
    end
    add_enum "stream_executor.dnn.AlgorithmProto.MathType" do
      value :DEFAULT_MATH, 0
      value :TENSOR_OP_MATH, 1
    end
    add_message "stream_executor.dnn.ConvolutionDescriptorProto" do
      repeated :paddings, :int64, 1
      repeated :strides, :int64, 2
      repeated :dilations, :int64, 3
      optional :compute_mode, :enum, 4, "stream_executor.dnn.DataType"
      optional :group_count, :int32, 5
      optional :convolution_mode, :enum, 6, "stream_executor.dnn.ConvolutionMode"
      optional :name, :string, 7
    end
    add_enum "stream_executor.dnn.DataType" do
      value :kFloat, 0
      value :kDouble, 1
      value :kHalf, 2
      value :kInt8, 3
      value :kInt32, 4
    end
    add_enum "stream_executor.dnn.DataLayout" do
      value :kYXDepthBatch, 0
      value :kYXBatchDepth, 1
      value :kBatchYXDepth, 2
      value :kBatchDepthYX, 3
      value :kBatchDepthYX4, 4
    end
    add_enum "stream_executor.dnn.FilterLayout" do
      value :kOutputInputYX, 0
      value :kOutputYXInput, 1
      value :kOutputInputYX4, 2
      value :kInputYXOutput, 3
      value :kYXInputOutput, 4
    end
    add_enum "stream_executor.dnn.ActivationMode" do
      value :kNone, 0
      value :kSigmoid, 1
      value :kRelu, 2
      value :kRelu6, 3
      value :kReluX, 4
      value :kTanh, 5
      value :kBandPass, 6
    end
    add_enum "stream_executor.dnn.ConvolutionMode" do
      value :CROSS_CORRELATION, 0
      value :CONVOLUTION, 1
    end
    add_enum "stream_executor.dnn.ConvolutionKind" do
      value :INVALID, 0
      value :FORWARD, 1
      value :BACKWARD_FILTER, 2
      value :BACKWARD_DATA, 3
      value :FORWARD_BIAS_ACTIVATION, 4
    end
  end
end

module StreamExecutor
  module Dnn
    TensorDescriptorProto = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.TensorDescriptorProto").msgclass
    AlgorithmProto = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.AlgorithmProto").msgclass
    AlgorithmProto::MathType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.AlgorithmProto.MathType").enummodule
    ConvolutionDescriptorProto = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.ConvolutionDescriptorProto").msgclass
    DataType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.DataType").enummodule
    DataLayout = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.DataLayout").enummodule
    FilterLayout = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.FilterLayout").enummodule
    ActivationMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.ActivationMode").enummodule
    ConvolutionMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.ConvolutionMode").enummodule
    ConvolutionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("stream_executor.dnn.ConvolutionKind").enummodule
  end
end
